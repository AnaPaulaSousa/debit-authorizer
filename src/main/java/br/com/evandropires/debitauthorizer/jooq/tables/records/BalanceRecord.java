/*
 * This file is generated by jOOQ.
 */
package br.com.evandropires.debitauthorizer.jooq.tables.records;


import br.com.evandropires.debitauthorizer.jooq.tables.Balance;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BalanceRecord extends UpdatableRecordImpl<BalanceRecord> implements Record3<Integer, Integer, BigDecimal> {

    private static final long serialVersionUID = 1995676562;

    /**
     * Setter for <code>public.balance.agency</code>.
     */
    public void setAgency(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.balance.agency</code>.
     */
    public Integer getAgency() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.balance.accountnumber</code>.
     */
    public void setAccountnumber(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.balance.accountnumber</code>.
     */
    public Integer getAccountnumber() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.balance.balancevalue</code>.
     */
    public void setBalancevalue(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.balance.balancevalue</code>.
     */
    public BigDecimal getBalancevalue() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Balance.BALANCE.AGENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Balance.BALANCE.ACCOUNTNUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Balance.BALANCE.BALANCEVALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getAgency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getAccountnumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component3() {
        return getBalancevalue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getAgency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getAccountnumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getBalancevalue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord value1(Integer value) {
        setAgency(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord value2(Integer value) {
        setAccountnumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord value3(BigDecimal value) {
        setBalancevalue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord values(Integer value1, Integer value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BalanceRecord
     */
    public BalanceRecord() {
        super(Balance.BALANCE);
    }

    /**
     * Create a detached, initialised BalanceRecord
     */
    public BalanceRecord(Integer agency, Integer accountnumber, BigDecimal balancevalue) {
        super(Balance.BALANCE);

        set(0, agency);
        set(1, accountnumber);
        set(2, balancevalue);
    }
}
